#namespace: fsi-ray
#createNamespace: false
rayCluster:
  metadata:
    name: fsi-ray
  spec:
    rayVersion: '2.6.0'
    headGroupSpec:
      serviceType: LoadBalancer
      rayStartParams:
        dashboardHost: '0.0.0.0'
      serviceAnnotations:
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
        service.beta.kubernetes.io/aws-load-balancer-scheme: internal
        # service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing # Private Load Balancer can only be accessed within the VPC
        service.beta.kubernetes.io/aws-load-balancer-type: external
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
        service.beta.kubernetes.io/aws-load-balancer-ip-address-type: ipv4
      template:
        spec:
          volumes:
            - name: efs-persist
              persistentVolumeClaim:
                claimName: efs-persist  # PVC 的名称
                namespace: jupyterhub   # 引用 PVC 所在命名空间
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  preference:
                    matchExpressions:
                      - key: NodeGroupType
                        operator: In
                        values: [ "core" ]
                - weight: 90
                  preference:
                    matchExpressions:
                      - key: NodeGroupType
                        operator: In
                        values: [ "gpu" ]
          tolerations:
            - key: nvidia.com/gpu
              operator: Exists
              effect: NoSchedule
          containers:
            rayHead:
              volumeMounts:
                - name: efs-persist
                  mountPath: /home/ray/efs
              image: rayproject/ray-ml:2.6.0
              resources:
                limits:
                  cpu: 1
                  memory: 8Gi
                  nvidiaGpu: 1
                requests:
                  cpu: 1
                  memory: 8Gi
                  nvidiaGpu: 1
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265
                  name: dashboard
                - containerPort: 10001
                  name: client
    workerGroupSpecs:
      replicas: 1
      minReplicas: 1
      maxReplicas: 5
      rayStartParams: {}  # 添加这一行
      groupName: gpu-group
      template:
        spec:
          volumes:
            - name: efs-persist
              persistentVolumeClaim:
                claimName: efs-persist
                namespace: jupyterhub
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  preference:
                    matchExpressions:
                      - key: NodeGroupType
                        operator: In
                        values: [ "core" ]
                - weight: 90
                  preference:
                    matchExpressions:
                      - key: NodeGroupType
                        operator: In
                        values: [ "gpu" ]
          tolerations:
            - key: nvidia.com/gpu
              operator: Exists
              effect: NoSchedule
          containers:
            rayWorker:
              volumeMounts:
                - name: efs-persist
                  mountPath: /home/ray/efs
              image: rayproject/ray-ml:2.6.0
              lifecycle:
                preStop:
                  exec:
                    command: ["/bin/sh","-c","ray stop"]
              resources:
                limits:
                  cpu: "1"
                  memory: "8Gi"
                  nvidiaGpu: 1
                requests:
                  cpu: "1"
                  memory: "8Gi"
                  nvidiaGpu: 1